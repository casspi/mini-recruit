function filterDate(v, format) {
  if (!format) {
    format = "yyyy-MM-dd hh:mm:ss";
  }
  if (typeof v === 'string') {
    v = v.replace(getRegExp('-', 'g'), '/')
  }
  var realDate = getDate(v);

  function timeFormat(num) {
    return num < 10 ? '0' + num : num;
  }

  var date = [
    ["M+", timeFormat(realDate.getMonth() + 1)],
    ["d+", timeFormat(realDate.getDate())],
    ["h+", timeFormat(realDate.getHours())],
    ["m+", timeFormat(realDate.getMinutes())],
    ["s+", timeFormat(realDate.getSeconds())],
    ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
    ["S+", realDate.getMilliseconds()],
  ];
  var reg1 = getRegExp("(y+)", "i").exec(format);
  if (reg1) {

    format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length));
  }
  for (var i = 0; i < date.length; i++) {
    var k = date[i][0];
    var v = date[i][1];

    var reg2 = getRegExp("(" + k + ")").exec(format);
    if (reg2) {
      format = format.replace(reg2[1], reg2[1].length == 1
        ? v : ("00" + v).substring(("" + v).length));
    }
  }
  return format;
}

function filterTime(date, fmt) {
  if (!date) return '--/--/--';
  date = date.replace(getRegExp("[^0-9-]", "ig"), '');
  return filterDate(+date, fmt || 'yyyy-MM-dd');
}

function formatArrayJoin(val, labelKey, str) {
  var separator = str || ';'
  return val.map(function (o) {
    return labelKey ? o[labelKey] : o
  }).join(separator)
}

function formatCity(val, labelKey, str) {
  console.log(JSON.stringify(val))
  var separator = str || ';'
  return val.map(function (o) {
    return o.province[labelKey] + o.city[labelKey]
  }).join(separator)
}

module.exports = {
  filterImage: function (v) {
    if (!v) return ''
    var arr = v.split('.')
    var x1 = arr[0]
    var x2 = arr[1]
    return 'https://images.autostreets.com/' + x1 + '*375*375.' + x2
  },
  source: function (src) {
    return src ? 'https://xxx.com/images/v2/' + src : '';
  },
  filterDate: filterDate,
  filterTime: filterTime,
  includes: function (arr, value, key, arrKey) {
    if (arrKey) arr = arr.map(function (item) {
      return item[arrKey]
    })
    if (!arr) arr = []
    var data = arr
    if (key) {
      data = []
      arr.forEach(function (item) {
        data.push(item[key])
      })
    }
    return data.indexOf(value) > -1
  },
  pickByKey: function (arr, val, key) {
    var res = []
    if (val && val.constructor && val.constructor == 'Array') {
      val.forEach(function (item) {
        arr.forEach(function (o) {
          if (typeof item === 'object') {
            if (o[key] === item[key]) res.push(o)
          } else {
            if (o[key] === item) res.push(o)
          }
        })
      })
    } else {
      arr.forEach(function (o) {
        if (typeof val === 'object') {
          if (o[key] === val[key]) res.push(o)
        } else {
          if (o[key] === val) res.push(o)
        }
      })
    }
    res.filter(function (item) {
      return item
    })
    return res
  },
  formatArrayJoin: formatArrayJoin,
  formatCity: formatCity,
  format: function (item) {
    var value = item && item.value
    var formatterKey = item && item.formatter
    // todo 0
    if (!value || !formatterKey) {
      return value
    }
    var formatter = { //格式化函数
      formatArrayJoin: formatArrayJoin,
      formatCity: formatCity
    }
    return formatter[formatterKey](value, item.labelKey || 'label')
  }
};
